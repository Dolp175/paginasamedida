<div
  id="pm-cookie-banner"
  class="fixed bottom-4 left-1/2 -translate-x-1/2 md:left-auto md:right-4 md:translate-x-0 max-w-md w-full p-4 bg-white text-gray-800 rounded shadow-lg border border-gray-200 z-50 hidden"
  role="dialog"
  aria-modal="true"
  aria-labelledby="pm-cookie-title"
  aria-describedby="pm-cookie-desc"
>
  <h2 id="pm-cookie-title" class="text-base font-semibold mb-2">Cookies</h2>
  <p id="pm-cookie-desc" class="text-sm mb-4">
    Usamos cookies para analizar el tráfico. Más info en
    <a href="/legal/politica-cookies/" class="underline hover:text-purple-600">política de cookies</a>.
  </p>
  <div class="flex gap-2 justify-end">
    <button id="pm-reject" type="button" class="px-3 py-1 rounded border border-gray-300 hover:bg-gray-50 transition-colors">Rechazar</button>
    <button id="pm-accept" type="button" class="px-3 py-1 rounded bg-purple-700 hover:bg-purple-800 text-white transition-colors">Aceptar</button>
  </div>
</div>

<script>
(function () {
  const STORAGE_KEY = 'pm_cookie_consent_v3';
  const COOKIE_TTL = 365;
  const banner = document.getElementById('pm-cookie-banner');
  const acceptBtn = document.getElementById('pm-accept');
  const rejectBtn = document.getElementById('pm-reject');

  if (!banner || !acceptBtn || !rejectBtn) return;

  const openBanner = () => { banner.classList.remove('hidden'); acceptBtn.focus(); };
  const closeBanner = () => { banner.classList.add('hidden'); };

  const notifyConsent = (value) => {
    document.dispatchEvent(new CustomEvent('pmConsentUpdate', {
      detail: { consent: value, timestamp: new Date().toISOString() }
    }));
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({ event: 'pm_consent_update', consent: value, timestamp: new Date().toISOString() });
  };

  const saveConsent = (value) => {
    const consentData = {
      value,
      date: new Date().toISOString(),
      expires: new Date(Date.now() + COOKIE_TTL * 86400000).toISOString()
    };
    localStorage.setItem(STORAGE_KEY, JSON.stringify(consentData));
    notifyConsent(value);
  };

  const getSavedConsent = () => {
    try {
      const saved = localStorage.getItem(STORAGE_KEY);
      if (!saved) return null;
      const { value, expires } = JSON.parse(saved);
      return new Date(expires) > new Date() ? value : null;
    } catch { return null; }
  };

  const shouldDenyByDefault = () =>
    !!(navigator.globalPrivacyControl || navigator.doNotTrack == '1');

  // ✅ Nueva lógica: si ya hay elección (granted o denied), NO reabrir
  const initBanner = () => {
    const savedConsent = getSavedConsent();
    if (savedConsent === 'granted' || savedConsent === 'denied') {
      notifyConsent(savedConsent);
      return; // no mostramos el banner otra vez
    }

    // Si no hay elección previa:
    if (shouldDenyByDefault()) {
      // Puedes elegir informar o no. Si NO quieres reabrir banner en GPC:
      saveConsent('denied');
      // openBanner(); // <- si quieres informar, descomenta
    } else {
      openBanner();
    }
  };

  acceptBtn.addEventListener('click', () => {
    saveConsent('granted');
    closeBanner();
  });

  rejectBtn.addEventListener('click', () => {
    saveConsent('denied');
    closeBanner();
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !banner.classList.contains('hidden')) closeBanner();
    if (e.key === 'Tab' && !banner.classList.contains('hidden')) {
      const focusable = Array.from(
        banner.querySelectorAll('button, a[href], input, select, textarea, [tabindex]:not([tabindex="-1"])')
      ).filter(el => !el.disabled && el.offsetParent !== null);
      if (!focusable.length) return;
      const first = focusable[0];
      const last  = focusable[focusable.length - 1];
      if (e.shiftKey && document.activeElement === first) { e.preventDefault(); last.focus(); }
      else if (!e.shiftKey && document.activeElement === last) { e.preventDefault(); first.focus(); }
    }
  });

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initBanner);
  } else {
    initBanner();
  }
})();
</script>

